client_max_body_size 0;

#gateway bee nodes
upstream gateway-beenode-lb {
	server bee0:1633;
	server bee1:1633;
}
	
#config
server {
	listen 1633;
	server_name internal-beenode-lb;
	resolver 127.0.0.11;

	proxy_http_version 1.1;
	proxy_set_header Connection "upgrade";
	proxy_set_header Host $host;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Host $host;
	proxy_set_header X-Forwarded-Proto $scheme;

	set $beehive_host_address http://beehive-manager;
	set $default_upstream http://gateway-beenode-lb;

	## Download APIs
	# Require to identify a pinning node, if exists. Otherwise, choose one from default LB
	####

	#bytes download (GET)
	location ~ "^(/v1)?/bytes/([A-Fa-f0-9]{64}|[A-Fa-f0-9]{128}|[A-Za-z0-9]+\.[A-Za-z0-9]+)$" {
		proxy_pass ${default_upstream};
	}

	#chunks download (GET)
	location ~ "^(/v1)?/chunks/([A-Fa-f0-9]{64}|[A-Fa-f0-9]{128}|[A-Za-z0-9]+\.[A-Za-z0-9]+)$" {
		proxy_pass ${default_upstream};
	}

	#bzz download (GET)
	location ~ "^(/v1)?/bzz/([A-Fa-f0-9]{64}|[A-Fa-f0-9]{128}|[A-Za-z0-9]+\.[A-Za-z0-9]+)(/\S*)?$" {
		proxy_pass ${default_upstream};
	}
		
	## Upload APIs
	# Require to identify the node owning the specific swarm-postage-batch-id reported in header
	####

	#bytes upload (POST)
	location ~ "^(/v1)?/bytes$" {
		auth_request /fetch_upstream_bee_node_by_postage_batch_id;

		auth_request_set $bee_scheme $upstream_http_bee_node_scheme;
		auth_request_set $bee_hostname $upstream_http_bee_node_hostname;
		auth_request_set $bee_gateway_port $upstream_http_bee_node_gateway_port;

		proxy_pass "${bee_scheme}://${bee_hostname}:${bee_gateway_port}";
	}

	#chunks upload single (POST)
	location ~ "^(/v1)?/chunks$" {
		auth_request /fetch_upstream_bee_node_by_postage_batch_id;

		auth_request_set $bee_scheme $upstream_http_bee_node_scheme;
		auth_request_set $bee_hostname $upstream_http_bee_node_hostname;
		auth_request_set $bee_gateway_port $upstream_http_bee_node_gateway_port;

		proxy_pass "${bee_scheme}://${bee_hostname}:${bee_gateway_port}";
	}

	#chunks upload stream (GET)
	location ~ "^(/v1)?/chunks/stream$" {
		auth_request /fetch_upstream_bee_node_by_postage_batch_id;

		auth_request_set $bee_scheme $upstream_http_bee_node_scheme;
		auth_request_set $bee_hostname $upstream_http_bee_node_hostname;
		auth_request_set $bee_gateway_port $upstream_http_bee_node_gateway_port;

		proxy_pass "${bee_scheme}://${bee_hostname}:${bee_gateway_port}";
	}

	#bzz upload (POST)
	location ~ "^(/v1)?/bzz$" {
		auth_request /fetch_upstream_bee_node_by_postage_batch_id;

		auth_request_set $bee_scheme $upstream_http_bee_node_scheme;
		auth_request_set $bee_hostname $upstream_http_bee_node_hostname;
		auth_request_set $bee_gateway_port $upstream_http_bee_node_gateway_port;

		proxy_pass "${bee_scheme}://${bee_hostname}:${bee_gateway_port}";
	}

	#pss send (POST)
	location ~ "^(/v1)?/pss/send/\w+/[0-9a-fA-F]{1,6}(,[0-9a-fA-F]{1,6})*$" {
		auth_request /fetch_upstream_bee_node_by_postage_batch_id;

		auth_request_set $bee_scheme $upstream_http_bee_node_scheme;
		auth_request_set $bee_hostname $upstream_http_bee_node_hostname;
		auth_request_set $bee_gateway_port $upstream_http_bee_node_gateway_port;

		proxy_pass "${bee_scheme}://${bee_hostname}:${bee_gateway_port}";
	}

	#feed create root (POST|GET)
	location ~ "^(/v1)?/feeds/[A-Fa-f0-9]{40}/[A-Fa-f0-9]+$" {
		#redirect location in case of GET
		if ($request_method = GET ) {
			rewrite ^ /rewrite_get_feed$uri last;
		}

		auth_request /fetch_upstream_bee_node_by_postage_batch_id;

		auth_request_set $bee_scheme $upstream_http_bee_node_scheme;
		auth_request_set $bee_hostname $upstream_http_bee_node_hostname;
		auth_request_set $bee_gateway_port $upstream_http_bee_node_gateway_port;

		proxy_pass "${bee_scheme}://${bee_hostname}:${bee_gateway_port}";
	}

	## Default LB
	# Handle any case where a simple LB can manage
	####

	location / {
		proxy_pass ${default_upstream};
	}

	## Internal alternative location handler
	# Some locations match with both GET and POST Api, even if we need to handle distinctly.
	# We have to use "rewrite ... last" because we need to invoke auth_request only with POSTs.
	####
	location /rewrite_get_feed {
		internal;
		rewrite ^/rewrite_get_feed(?<realurl>/.*)$ $realurl break;

		proxy_pass ${default_upstream};
	}

	## Internal "auth_request" workaround
	# Nginx requires some hacky workaround for select upstream based on external async calls.
	# See: https://github.com/nginx/njs-examples#setting-nginx-var-as-a-result-of-async-operation
	####

	location /fetch_upstream_bee_node_by_postage_batch_id {
		internal;

		proxy_method GET;
		proxy_pass ${beehive_host_address}/api/v0.3/Postage/batches/${http_swarm_postage_batch_id}/node?useHeader=true;
		proxy_pass_request_body off;
		proxy_set_header Content-Length "";
		proxy_set_header X-Original-URI $request_uri;
	}
}